image: docker:latest
services:
  - name: docker:dind
    alias: docker
stages:
  - build
  - test
  - release
  - deploy review
  - stop review
  - deploy staging
  - test staging
  - deploy prod
  - test prod
build-job:
    stage: build
    script:
        - docker build -t static-website .
        - docker save static-website > static-website.tar
    artifacts:
        paths:
          - static-website.tar
  
test-job:
    stage: test
    script:
      - docker load < static-website.tar 
      - docker run --name website -d -p 80:8080 -e PORT=8080 static-website
      - sleep 5
      - apk add --no-cache curl
      - curl "http://docker" | grep -q "Dimension"

release-job:
    stage: release
    script:
      - docker load < static-website.tar
      - docker tag static-website "${STATIC_IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
      - docker tag static-website "${STATIC_IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
      - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
      - docker push "${STATIC_IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
      - docker push  "${STATIC_IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
      
staging-job:
    stage: deploy staging
    environment:
       name: staging
       url: https://static-website-staging.herokuapp.com
    only:
      - master
    script:
      - apk add --update nodejs npm
      - npm install -g heroku
      - heroku container:login
      - heroku create static-website-staging || echo "application already exists"
      - heroku container:push -a static-website-staging web
      - heroku container:release -a static-website-staging web



